<?xml version="1.0" encoding="UTF-8"?>
<project name="egliciel" default="usage" basedir=".">

	<!--======================================================-->
	<!-- Property files loading                               -->
	<!--======================================================-->
	<property file="build.properties"/>
	<property file="project.properties"/>
	
	<!--======================================================-->
	<!-- Properties definition                                -->
	<!--======================================================-->
	<!-- where building occurs-->
	<property name="target.dir" location="${basedir}/target" /> 
	<property name="classes.dir" location="${target.dir}/classes" /> 
	<property name="classes-test.dir" location="${target.dir}/classes-test" /> 

	<property name="database-schema.dir" location="${target.dir}/database-schema"/>
	
	<property name="dist.dir" location="${target.dir}/dist" /> 
	<property name="docs.dir" location="${dist.dir}/docs" /> 
	<property name="javadoc.dir" location="${docs.dir}/api" /> 

	<!-- reference to source parts-->
	<property name="src.dir" location="${basedir}/src/main/java" /> 
	<property name="src-test.dir" location="${basedir}/src/test/java" /> 
	<property name="resources.dir" location="${basedir}/src/main/resources" /> 
	<property name="resources-test.dir" location="${basedir}/src/test/resources" /> 
	
	<!-- reference to jars used for code compilation -->
	<!-- directory containing jar used for compiling/running code-->
	<property name="lib.compile.code.dir" location="${basedir}/lib" />
	<!-- directory containing jar used for compiling/running unit tests -->
	<property name="lib.compile.test.dir" location="${basedir}/lib-test" />

	<!-- compilation options -->
	<property name="build.debug" location="true" />
	
	<!--======================================================-->
	<!-- Usage                                                -->
	<!--======================================================-->
	<target name="usage" description="--> Display usage">
	</target>
	
	
	<!--======================================================-->
	<!-- Clean                                                -->
	<!--======================================================-->
	<target name="clean" depends="-init, -clean-target" description="--> Clean build output">
	</target>
	
	<!--======================================================-->
	<!-- Build                                                -->
	<!--======================================================-->
	<target name="build" depends="-init, -copy-resources-code, -compile-code" 
		    description="--> Build (without jaring)">
	</target>
	<!--======================================================-->
	<!-- Build                                                -->
	<!--======================================================-->
	<target name="buildtest" depends="-init, -copy-resources-test, -compile-test"
		    description="--> Build test code (without jaring)">
	</target>
	
	<!--======================================================-->
	<!-- Test                                                 -->
	<!--======================================================-->
	<target name="test" depends="-init, buildtest" 
		    description="--> Execute all tests">
	</target>
	<!--======================================================-->
	<!-- buildall                                             -->
	<!--======================================================-->
	<target name="buildall" depends="build, buildtest" description="--> Build (without jaring)">
	</target>

	<!--======================================================-->
	<!-- Run                                                  -->
	<!--======================================================-->
	<target name="run" description="--> Run compiled application">
	</target>

	<!--======================================================-->
	<!-- Jar                                                  -->
	<!--======================================================-->
	<target name="jar" description="--> Package jar with application">
	</target>

	<!--======================================================-->
	<!-- dist                                                 -->
	<!--======================================================-->
	<target name="dist" description="--> Build distribution">
	</target>
	
	<!--======================================================-->
	<!-- javadoc                                              -->
	<!--======================================================-->
	<target name="javadoc" description="--> Build javadoc">
	</target>

	<!--======================================================-->
	<!-- create-schem                                         -->
	<!--======================================================-->
	<target name="create-schema" description="--> Create database schema script from mapping files">
	</target>

	<!-- Patternsets declarations     -->	
	<patternset id="resources-files">
		<include name="**/*.xml"/>
		<include name="**/*.properties"/>
		<include name="**/*.jfrm"/> <!-- jeta form designer files -->
	</patternset>
	
	<!-- filesets  resources files in code   -->
	<fileset id="resources-code" dir="${resources.dir}">
		<patternset refid="resources-files"></patternset>
	</fileset>
	<!-- filesets  resources files in tests   -->
	<fileset id="resources-test" dir="${resources-test.dir}">
		<patternset refid="resources-files"></patternset>
	</fileset>
	
	
	<!-- filesets  list of jar to use in compile classpath for code   -->
	<fileset id="lib.compile.code.fileset" dir="${lib.compile.code.dir}">
		<include name="*.jar"/>
	</fileset>

	<!-- filesets  list of jar to use in compile classpath for test   -->
	<fileset id="lib.compile.test.fileset" dir="${lib.compile.test.dir}">
		<include name="*.jar"/>
	</fileset>

	<!-- classpath for compiling code   -->
	<path id="compile.code.classpath">
		<fileset refid="lib.compile.code.fileset" />
	</path>
	
	<!-- classpath for compiling test   -->
	<path id="compile.test.classpath">
		<path refid="compile.code.classpath"/>
		<fileset refid="lib.compile.test.fileset" />
	</path>
	
	
	<!-- Internal targets not to be run from command line     -->	
	
	
	
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: -init
         - - - - - - - - - - - - - - - - - -->
	<target name="-init" depends="-init-target">
	</target>
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: -init-target
          create target subfolders
         - - - - - - - - - - - - - - - - - -->
	<target name="-init-target" >
		<mkdir dir="${target.dir}"/>
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${classes-test.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${javadoc.dir}"/>
		<mkdir dir="${docs.dir}"/>
	</target>

	
    <!-- - - - - - - - - - - - - - - - - - 
          target: -clean-target                      
         - - - - - - - - - - - - - - - - - -->
    <target name="-clean-target">
    	<delete dir="${target.dir}"/>
    </target>


	
    <!-- - - - - - - - - - - - - - - - - - 
          target: -generate-code                      
                  run automatic code generation if any
         - - - - - - - - - - - - - - - - - -->
    <target name="-generate-code" depends="">
            
    </target>

	
    <!-- - - - - - - - - - - - - - - - - - 
          target: -generate-test                      
         - - - - - - - - - - - - - - - - - -->
    <target name="-generate-test" depends="">
            
    </target>

	
    <!-- - - - - - - - - - - - - - - - - - 
          target: -compile-code                      
         - - - - - - - - - - - - - - - - - -->
    <target name="-compile-code" depends="-generate-code">
		<javac destdir ="${classes.dir}"
			   srcdir  ="${src.dir}"
			   debug   ="${build.debug}"
		>
			<classpath refid="compile.code.classpath"></classpath>
    	</javac>
    </target>

	
    <!-- - - - - - - - - - - - - - - - - - 
          target: -compile-test                      
         - - - - - - - - - - - - - - - - - -->
    <target name="-compile-test" depends="-generate-test,-compile-code">
		<javac destdir ="${classes.dir}"
			   srcdir  ="${src.dir}"
			   debug   ="${build.debug}"
		>
			<classpath refid="compile.test.classpath"></classpath>
    	</javac>
            
    </target>

    
    <!-- - - - - - - - - - - - - - - - - - 
          target: -copy-resources-code                      
         - - - - - - - - - - - - - - - - - -->
    <target name="-copy-resources-code">
    	<copy todir="${classes.dir}">
    		<fileset refid="resources-code"></fileset>
    	</copy>
    </target>
	
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: -copy-resources-test                      
         - - - - - - - - - - - - - - - - - -->
    <target name="-copy-resources-test">
    	<copy todir="${classes-test.dir}">
    		<fileset refid="resources-test"></fileset>
    	</copy>            
    </target>




</project>

